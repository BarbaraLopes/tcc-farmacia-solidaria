{"version":3,"sources":["webpack:///./src/app/medicamentos/medicamentos-cadastro/medicamento-cadastro.component.css","webpack:///./src/app/medicamentos/medicamentos-cadastro/medicamento-cadastro.component.html","webpack:///./src/app/medicamentos/medicamentos-cadastro/medicamento-cadastro.component.ts","webpack:///./src/app/medicamentos/medicamentos-pesquisa/medicamentos-pesquisa.component.css","webpack:///./src/app/medicamentos/medicamentos-pesquisa/medicamentos-pesquisa.component.html","webpack:///./src/app/medicamentos/medicamentos-pesquisa/medicamentos-pesquisa.component.ts","webpack:///./src/app/medicamentos/medicamentos-routing.module.ts","webpack:///./src/app/medicamentos/medicamentos.module.ts"],"names":[],"mappings":"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","file":"src-app-medicamentos-medicamentos-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <form autocomplete=\\\"off\\\" (ngSubmit)=\\\"salvar()\\\" [formGroup]=\\\"formulario\\\">\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-12\\\">\\n        <h1>Cadastro</h1>\\n      </div>\\n\\n      <div class=\\\"ui-g-12 ui-md-7 ui-fluid\\\">\\n        <label>Medicamento</label>\\n        <p-autoComplete formControlName=\\\"principioAtivo\\\" name=\\\"medicamento\\\" [suggestions]=\\\"nomesFiltrados\\\" (completeMethod)=\\\"filteredMedicamentoSingle($event)\\\"\\n          [size]=\\\"30\\\" [minLength]=\\\"1\\\">\\n        </p-autoComplete>\\n        <app-message [control]=\\\"formulario.get('principioAtivo')\\\" error=\\\"obrigatoriedade\\\" text=\\\"Informe um medicamento\\\"></app-message>\\n      </div>\\n      <div class=\\\"ui-g-6  ui-md-3 ui-fluid\\\">\\n        <label>Lote</label>\\n        <input pInputText type=\\\"text\\\" name=\\\"lote\\\" formControlName=\\\"lote\\\">\\n\\n        <app-message [control]=\\\"formulario.get('lote')\\\" error=\\\"obrigatoriedade\\\" text=\\\"Informe o lote\\\"></app-message>\\n        <app-message [control]=\\\"formulario.get('lote')\\\" error=\\\"tamanhoMinimo\\\" text=\\\"Mínimo de {{ formulario.get('lote').errors?.tamanhoMinimo?.tamanho }} caracteres\\\"></app-message>\\n      </div>\\n      <div class=\\\"ui-g-6 ui-md-2 ui-fluid\\\">\\n        <label>Dosagem</label>\\n        <input pInputText type=\\\"text\\\" name=\\\"dosagem\\\" formControlName=\\\"dosagem\\\">\\n        <app-message [control]=\\\"formulario.get('dosagem')\\\" error=\\\"obrigatoriedade\\\" text=\\\"Informe uma dosagem\\\"></app-message>\\n      </div>\\n      <div class=\\\"ui-g-12 ui-md-5 ui-fluid\\\">\\n        <label>Nome comercial</label>\\n        <input pInputText type=\\\"text\\\" name=\\\"comercial\\\" formControlName=\\\"nomeComercial\\\">\\n      </div>\\n      <div class=\\\"ui-g-6 ui-md-2 ui-fluid\\\">\\n        <label>Laboratório</label>\\n        <input pInputText type=\\\"text\\\" name=\\\"lab\\\" formControlName=\\\"laboratorio\\\">\\n      </div>\\n      <div class=\\\"ui-g-6 ui-md-2 ui-fluid\\\" formGroupName=\\\"tipo\\\">\\n        <label>Forma farmacêutica</label>\\n        <p-dropdown name=\\\"tipo\\\" [options]=\\\"tipos\\\" placeholder=\\\"Selecione\\\" [autoWidth]=\\\"false\\\" formControlName=\\\"id\\\" (onChange)=\\\"desabilitarQtd()\\\"></p-dropdown>\\n      </div>\\n      <div class=\\\"ui-g-6 ui-md-1 ui-fluid\\\" formGroupName=\\\"estoque\\\">\\n        <label>Quantidade</label>\\n        <input pInputText type=\\\"number\\\" name=\\\"qtd-comp\\\" formControlName=\\\"quantidade\\\">\\n      </div>\\n      <div class=\\\"ui-g-6 ui-md-2 ui-fluid\\\">\\n        <label>Data de vencimento</label>\\n        <p-calendar name=\\\"vencimento\\\" dateFormat=\\\"dd/mm/yy\\\" [inline]=\\\"false\\\" [readonlyInput]=\\\"false\\\" [showIcon]=\\\"false\\\" formControlName=\\\"dataVencimento\\\"></p-calendar>\\n\\n        <app-message [control]=\\\"formulario.get('dataVencimento')\\\" error=\\\"required\\\" text=\\\"Informe uma data de vencimento\\\"></app-message>\\n      </div>\\n      <div class=\\\"ui-g-12 ui-fluid\\\">\\n        <label>Observação</label>\\n        <textarea pInputTextarea rows=\\\"3\\\" name=\\\"observacao\\\" formControlName=\\\"outrasEspecificacoes\\\"></textarea>\\n      </div>\\n      <div class=\\\"ui-g-12\\\">\\n        <button pButton type=\\\"submit\\\" label=\\\"Salvar\\\" [disabled]=\\\"formulario.invalid\\\"></button>\\n        <a routerLink=\\\"/medicamentos\\\">Voltar para a pesquisa</a>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<p-dialog [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\"\\n        [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n    <span>Lote já cadastrado, deseja acrescentar a quantidade '{{formulario.get('estoque').value.quantidade}}' ao estoque do medicamento?</span>\\n        <p-footer>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"atualizarEstoque()\\\" label=\\\"Sim\\\"></button>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"display=false\\\" label=\\\"Não\\\" class=\\\"ui-button-secondary\\\"></button>\\n        </p-footer>\\n</p-dialog>\\n\"","import { MedicamentoService } from '../medicamento.service';\nimport { Title } from '@angular/platform-browser';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ToastyService } from 'ng2-toasty';\nimport { TipoService } from '../../tipo/tipo.service';\nimport { ErrorHandlerService } from '../../core/error-handler.service';\nimport { EstoqueService } from '../../estoque/estoque.service';\nimport { Estoque } from '../../core/model';\n\n@Component({\n  selector: 'app-medicamento-cadastro',\n  templateUrl: './medicamento-cadastro.component.html',\n  styleUrls: ['./medicamento-cadastro.component.css']\n})\nexport class MedicamentoCadastroComponent implements OnInit {\n\n  public nomesFiltrados: any[];\n  tipos = [];\n  formulario: FormGroup;\n  desabilitarCampoQtd = true;\n  display = false;\n\n  constructor(\n    private medicamentoService: MedicamentoService,\n    private tipoService: TipoService,\n    private formBuilder: FormBuilder,\n    private toasty: ToastyService,\n    private router: Router,\n    private errorHandler: ErrorHandlerService,\n  ) { }\n\n  ngOnInit() {\n    this.configurarFormulario();\n    this.carregarTipos();\n  }\n\n  carregarTipos() {\n    return this.tipoService.listarTodos()\n      .then(tipos => {\n        this.tipos = tipos\n          .map(c => ({ label: c.descricao, value: c.id }));\n      });\n  }\n\n  filteredMedicamentoSingle(event) {\n    const query = event.query;\n    this.medicamentoService.filtrarNomes(query)\n      .then(resultado => {\n        this.nomesFiltrados = resultado;\n      });\n  }\n\n  salvar() {\n    this.formulario.get('status').value.id = 1;\n    this.formulario.get('status').value.descricao = 'Disponível';\n    this.formulario.get('estoque').value.quantidade = this.desabilitarCampoQtd ? 1 : this.formulario.get('estoque').value.quantidade;\n    this.medicamentoService.salvar(this.formulario.value)\n      .then(medicamentoAdicionado => {\n        this.toasty.success('Medicamento adicionado com sucesso!');\n        this.router.navigate(['/medicamentos']);\n      }).catch(erro => this.display = true);\n  }\n\n  atualizar() {\n    this.medicamentoService.atualizar(this.formulario.value)\n      .then(medicamentoAdicionado => {\n        this.toasty.success('Medicamento atualizado com sucesso!');\n        this.router.navigate(['/medicamentos']);\n      }).catch(erro => this.errorHandler.handle(erro));\n  }\n\n  atualizarEstoque() {\n    const estoque = new Estoque();\n    estoque.quantidade = this.formulario.get('estoque').value.quantidade;\n    this.medicamentoService.atualizarEstoque(estoque, this.formulario.get('lote').value)\n      .then(medicamentoAdicionado => {\n        this.toasty.success('Medicamento atualizado com sucesso!');\n        this.router.navigate(['/medicamentos']);\n      }).catch(erro => this.errorHandler.handle(erro));\n  }\n\n  configurarFormulario() {\n    this.formulario = this.formBuilder.group({\n      principioAtivo: [null, this.validarObrigatoriedade],\n      lote: [null, [this.validarObrigatoriedade, this.validarTamanhoMinimo(5)]],\n      dosagem: [null, this.validarObrigatoriedade],\n      tipo: this.formBuilder.group({\n        id: [null, Validators.required],\n        descricao: []\n      }),\n      estoque: this.formBuilder.group({\n        id: [],\n        quantidade: []\n      }),\n      dataVencimento: [null, Validators.required],\n      outrasEspecificacoes: [],\n      nomeComercial: [],\n      laboratorio: [],\n      status: this.formBuilder.group({\n        id: [],\n        descricao: []\n      }),\n    });\n  }\n\n  validarObrigatoriedade(input: FormControl) {\n    return (input.value ? null : { obrigatoriedade: true });\n  }\n\n  validarTamanhoMinimo(valor: number) {\n    return (input: FormControl) => {\n      return (!input.value || input.value.length >= valor) ? null : { tamanhoMinimo: { tamanho: valor } };\n    };\n  }\n\n  desabilitarQtd() {\n    this.desabilitarCampoQtd = this.formulario.get('tipo').value.id === 1;\n  //  this.desabilitarCampoQtd ? this.formulario.controls['estoque'].disable() : this.formulario.controls['estoque'].enable();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"ui-g\\\">\\n\\n    <form autocomplete=\\\"off\\\" (ngSubmit)=\\\"pesquisar()\\\">\\n\\n      <div class=\\\"ui-g-12\\\">\\n        <h1>Estoque de medicamentos</h1>\\n      </div>\\n\\n      <div class=\\\"ui-g-12 ui-fluid\\\">\\n        <label>Digite o nome do medicamento:</label>\\n        <input pInputText type=\\\"text\\\" name=\\\"descricao\\\" [(ngModel)]=\\\"filtro.descricao\\\">\\n      </div>\\n\\n      <div class=\\\"ui-g-12\\\">\\n        <button pButton type=\\\"submit\\\" label=\\\"Pesquisar\\\"></button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\\n  <div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12\\\">\\n      <p-dataTable [value]=\\\"medicamentos\\\" [responsive]=\\\"true\\\" emptyMessage=\\\"Nenhum medicamento encontrado\\\" [paginator]=\\\"true\\\" [rows]=\\\"filtro.itensPorPagina\\\"\\n        [lazy]=\\\"true\\\" [totalRecords]=\\\"totalRegistros\\\" (onLazyLoad)=\\\"aoMudarPagina($event)\\\">\\n        <p-column field=\\\"principioAtivo\\\" header=\\\"Medicamento\\\"></p-column>\\n        <p-column field=\\\"nomeComercial\\\" header=\\\"NomeComercial\\\"></p-column>\\n        <p-column field=\\\"dosagem\\\" header=\\\"Dosagem\\\"></p-column>\\n        <p-column field=\\\"tipo.descricao\\\" header=\\\"Forma farmacêutica\\\"></p-column>\\n        <p-column field=\\\"status.descricao\\\" header=\\\"Status\\\"></p-column>\\n        <p-column header=\\\"Vencimento\\\" styleClass=\\\"col-data\\\">\\n          <ng-template let-med=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span>{{ med.dataVencimento | date:'dd/MM/yyyy' }}</span>\\n          </ng-template>\\n        </p-column>\\n        <p-column styleClass=\\\"col-acoes\\\">\\n          <ng-template let-med=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <button pButton icon=\\\"fa fa-minus\\\" pTooltip=\\\"Excluir\\\" tooltipPosition=\\\"top\\\" (click)=\\\"excluir(med)\\\" *ngIf=\\\"med.status.descricao === 'Disponível'\\\"></button>\\n            <button pButton icon=\\\"fa fa-check\\\" pTooltip=\\\"Doar\\\" tooltipPosition=\\\"top\\\" (click)=\\\"abrirModalConfirmacao(med)\\\" *ngIf=\\\"med.status.descricao === 'Reservado'\\\"></button>\\n          </ng-template>\\n        </p-column>\\n      </p-dataTable>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"ui-g-12\\\">\\n    <a pButton label=\\\"Novo Medicamento\\\" routerLink=\\\"/medicamentos/novo\\\"></a>\\n  </div>\\n\\n</div>\\n\\n<form autocomplete=\\\"off\\\" [formGroup]=\\\"formulario\\\">\\n  <p-dialog header=\\\"Remover do estoque\\\" [(visible)]=\\\"display\\\">\\n    <div class=\\\"ui-g\\\">\\n      <div class=\\\"ui-g-12 ui-fluid\\\">\\n        <label>Motivo</label>\\n        <textarea pInputTextarea rows=\\\"3\\\" name=\\\"motivo\\\" formControlName=\\\"motivo\\\"></textarea>\\n        <app-message [control]=\\\"formulario.get('motivo')\\\" error=\\\"required\\\" text=\\\"Informe um motivo\\\"></app-message>\\n      </div>\\n    </div>\\n    <p-footer>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa fa-trash\\\" (click)=\\\"atualizarStatusParaExcluido()\\\" label=\\\"Excluir\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"display=false\\\" label=\\\"Cancelar\\\" class=\\\"ui-button-secondary\\\"></button>\\n    </p-footer>\\n  </p-dialog>\\n</form>\\n<p-dialog header=\\\"Doar medicamento\\\" [(visible)]=\\\"displayDoar\\\">\\n  <div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12 ui-fluid\\\">\\n      <label>Deseja confirmar a doação para o usuário João ou cancelar? </label>\\n    </div>\\n  </div>\\n  <p-footer>\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-check\\\" label=\\\"Confirmar\\\" (click)=\\\"confirmarSolicitacao()\\\"></button>\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" label=\\\"Cancelar\\\" (click)=\\\"excluirSolicitacao()\\\" class=\\\"ui-button-secondary\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n\"","import { SolicitacaoMedicamentoService } from '../../solicitacao/solicitacao-medicamento.service';\nimport { Status, Medicamento } from '../../core/model';\nimport { Component, OnInit } from '@angular/core';\n\nimport { LazyLoadEvent } from 'primeng/components/common/api';\nimport { MedicamentoFiltro, MedicamentoService } from '../medicamento.service';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { ToastyService } from 'ng2-toasty';\nimport { ErrorHandlerService } from '../../core/error-handler.service';\n\n@Component({\n  selector: 'app-medicamentos-pesquisa',\n  templateUrl: './medicamentos-pesquisa.component.html',\n  styleUrls: ['./medicamentos-pesquisa.component.css']\n})\nexport class MedicamentosPesquisaComponent implements OnInit {\n\n  totalRegistros = 0;\n  filtro = new MedicamentoFiltro();\n  medicamentos = [];\n  medicamento: Medicamento;\n  display: Boolean = false;\n  formulario: FormGroup;\n  displayDoar: Boolean = false;\n\n  constructor(private medicamentoService: MedicamentoService, private formBuilder: FormBuilder, private toasty: ToastyService,\n    private solicitacaoService: SolicitacaoMedicamentoService, private errorHandler: ErrorHandlerService) { }\n\n  ngOnInit() {\n    this.medicamento = new Medicamento();\n    this.formulario = this.formBuilder.group({\n      motivo: [ null, Validators.required ],\n    });\n  }\n\n  pesquisar(pagina = 0) {\n    this.filtro.pagina = pagina;\n    this.medicamentoService.pesquisar(this.filtro)\n      .then(resultado => {\n        this.totalRegistros = resultado.total;\n        this.medicamentos = resultado.medicamentos;\n      });\n  }\n\n  aoMudarPagina(event: LazyLoadEvent) {\n    const pagina = event.first / event.rows;\n    this.pesquisar(pagina);\n  }\n\n  excluir(medicamento: any) {\n    this.medicamento = medicamento;\n    this.display = true;\n  }\n\n  atualizarStatusParaExcluido() {\n    const status = this.medicamento.status;\n    this.medicamento.status.id = 5;\n    this.medicamento.status.descricao = 'Excluído';\n    this.medicamento.obsExclusao = this.formulario.get('motivo').value;\n    this.medicamentoService.atualizarStatus(this.medicamento)\n      .then(medicamento => {\n        this.medicamento = medicamento;\n        this.toasty.success('Medicamento excluído com sucesso!');\n        this.display = false;\n      }).catch(erro => {this.display = true; this.medicamento.status = status;  this.medicamento.obsExclusao = ''; });\n  }\n\n  abrirModalConfirmacao(medicamento: any) {\n    this.medicamento = medicamento;\n    this.displayDoar = true;\n  }\n\n  confirmarSolicitacao() {\n    const solicitacao = this.medicamento.solicitacaoAtual;\n    solicitacao.medicamento = this.medicamento;\n    solicitacao.medicamento.solicitacaoAtual = null;\n    this.displayDoar = false;\n    this.solicitacaoService.confirmarSolicitacao(solicitacao, this.medicamento.lote)\n      .then(medicamentoAdicionado => {\n        this.toasty.success('Reserva confirmada com sucesso!');\n        this.medicamento.solicitacaoAtual = solicitacao;\n        this.pesquisar();\n      }).catch(erro =>  {this.medicamento.solicitacaoAtual = solicitacao; this.errorHandler.handle(erro); });\n  }\n\n  excluirSolicitacao() {\n    const solicitacao = this.medicamento.solicitacaoAtual;\n    solicitacao.medicamento = this.medicamento;\n    solicitacao.medicamento.solicitacaoAtual = null;\n    this.displayDoar = false;\n    this.solicitacaoService.excluirSolicitacao(solicitacao, this.medicamento.lote)\n      .then(medicamentoAdicionado => {\n        this.toasty.success('Reserva excluída com sucesso!');\n        this.medicamento.solicitacaoAtual = solicitacao;\n        this.pesquisar();\n      }).catch(erro => {this.medicamento.solicitacaoAtual = solicitacao; this.errorHandler.handle(erro); });\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { MedicamentoCadastroComponent } from './medicamentos-cadastro/medicamento-cadastro.component';\r\nimport { MedicamentosPesquisaComponent } from './medicamentos-pesquisa/medicamentos-pesquisa.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MedicamentosPesquisaComponent,\r\n    data: {}\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: MedicamentoCadastroComponent,\r\n   data: { }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class MedicamentosRoutingModule {}\r\n","import { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { DataTableModule } from 'primeng/components/datatable/datatable';\r\nimport {DialogModule} from 'primeng/dialog';\r\n\r\nimport { MedicamentosRoutingModule } from './medicamentos-routing.module';\r\nimport { MedicamentosPesquisaComponent } from './medicamentos-pesquisa/medicamentos-pesquisa.component';\r\nimport { MedicamentoCadastroComponent } from './medicamentos-cadastro/medicamento-cadastro.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    InputTextModule,\r\n    DataTableModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    TooltipModule,\r\n    InputTextareaModule,\r\n    CalendarModule,\r\n    SelectButtonModule,\r\n    DropdownModule,\r\n    CurrencyMaskModule,\r\n    FileUploadModule,\r\n    ProgressSpinnerModule,\r\n    AutoCompleteModule,\r\n    DialogModule,\r\n\r\n    SharedModule,\r\n    MedicamentosRoutingModule\r\n  ],\r\n  declarations: [\r\n    MedicamentoCadastroComponent,\r\n    MedicamentosPesquisaComponent\r\n  ],\r\n  exports: []\r\n})\r\nexport class MedicamentosModule { }\r\n"],"sourceRoot":""}